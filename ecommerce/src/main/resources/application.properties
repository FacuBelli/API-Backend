#Aca se define de que manera nos conectamos a la DDBB, agregando la info que necesitamos para la conexion
#tambien puedo cambiar el puerto usando server.port = numeroDelPuerto
spring.application.name=ecommerce

#Datos de conexion de DDBB

spring.datasource.url=jdbc:sqlserver://66.60.40.20:7680;databaseName=BestGallery;encrypt=true;trustServerCertificate=true
spring.datasource.driverClassName = com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.datasource.username = app_service
spring.datasource.password = queMartuSeCalleLaBoca

#Aca defino que hara la DDBB cuando hago un cambio
#En este caso, se actualizara
spring.jpa.database-platform=org.hibernate.dialect.SQLServerDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

application.security.jwt.secretKey=eyJhbGciOiJIUzI1NiJ9.eyJSb2xlIjoiQWRtaW4iLCJJc3N1ZXIiOiJJc3N1ZXIiLCJVc2VybmFtZSI6IkphdmFJblVzZSIsImV4cCI6MTcxOTk1NjgyOCwiaWF0IjoxNzE5OTU2ODI4fQ.kAaRdnwUvoL9g1VLdtNcA69lpfN7UKXalaXztY90m-8
application.security.jwt.expiration=3600000

#Capa de trafico: se implementan los diferentes endpoints. Aca se ponen el get, post, put y demas. Entonces asi modularizas y solo tiene una responsabilidad, no hay logica de negocio, solo CRUD
#Capa de servicios: se aplica toda la logica de negocios ej crear producto, descuento, lo que sea. Define si la request es valida o no
#Capa Data Access: Aca solo se persiste el cambio, osea se guarda en la DDBB
